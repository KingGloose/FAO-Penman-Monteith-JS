!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(require("mathjs")):"function"==typeof define&&define.amd?define(["mathjs"],e):"object"==typeof exports?exports["faopm-js"]=e(require("mathjs")):t["faopm-js"]=e(t.mathjs)}(this,(t=>(()=>{"use strict";var e={961:e=>{e.exports=t}},a={};function r(t){var i=a[t];if(void 0!==i)return i.exports;var n=a[t]={exports:{}};return e[t](n,n.exports,r),n.exports}r.d=(t,e)=>{for(var a in e)r.o(e,a)&&!r.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:e[a]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var i={};r.r(i),r.d(i,{default:()=>u});var n=r(961);const s=class{constructor(t){this.cacheData=new Map,this.math=(0,n.create)(n.all,Object.assign({number:"BigNumber",precision:10},t))}isString(t){return"string"==typeof t}isNumber(t){return"number"==typeof t}getAverage(t,e){if(!this.isString(t)&&!this.isNumber(t))throw new Error("getAverage: value1 is not number or string");if(!this.isString(e)&&!this.isNumber(e))throw new Error("getAverage: value2 is not number or string");return this.math.evaluate(`(${t} + ${e}) / 2`)}executeFAOMapping(t,e=!0){const a=this;return function(...r){const{key:i,name:n,unit:s}=t;if(a.cacheData.has(i))return a.cacheData.get(i).value;const o=a,u=t.fn.call(a,o,...r);return e&&a.cacheData.set(i,{key:i,name:n,unit:s,value:u}),u}}},o={DAY_SEQUENCE_NUMBER:{key:"day_sequence_number",name:"日序数",unit:"day",fn(t,e){const a=new Date(e),r=new Date(a.getFullYear(),0,0).getTime(),i=a.getTime()-r;return Math.floor(i/864e5)}},AVERAGE_TEMPERATURE:{key:"average_temperature",name:"平均温度",unit:"°C",fn:(t,e,a)=>t.getAverage(e,a)},STATION_ATMOSPHERIC_PRESSURE:{key:"station_atmospheric_pressure",name:"大气压强",unit:"kPa",fn(t,e){const{subtract:a,multiply:r,divide:i,bignumber:n,pow:s}=t.math;return r(n(101.3),s(i(a(n(293),r(n(.0065),n(e))),n(293)),n(5.26)))}},VAPOR_PRESSURE_BYT:{key:"vapor_pressure_byt",name:"空气温度T时的水汽压",unit:"kPa",fn(t,e){const{evaluate:a}=t.math;return a(`0.6108 * exp((17.27 * ${e}) / (${e} + 237.3))`)}},RADIAN_MEASURE_BYLAT:{key:"radian_measure_bylat",name:"弧度",unit:"radian",fn(t,e){const{multiply:a,divide:r,bignumber:i}=t.math;return a(r(i(Math.PI),i(180)),i(e))}},HYGROMETER_CONSTANT:{key:"hygrometer_constant",name:"湿度计常数",unit:"MJkg^-1℃^-1",fn(t,e){const{multiply:a,bignumber:r}=t.math;return a(r(665e-6),r(e))}},SATURATION_VAPOR_PRESSURE:{key:"saturation_vapor_pressure",name:"饱和水汽压",unit:"kPa",fn(t,e,a){const{add:r,divide:i}=t.math;return i(r(t.VaporPressureByt(e),t.VaporPressureByt(a)),2)}},SATURATION_VAPOR_PRESSURE_SLOPE:{key:"saturation_vapor_pressure_slope",name:"饱和水汽压曲线斜率",unit:"kPa/℃",fn(t,e){const{add:a,multiply:r,divide:i,bignumber:n,pow:s}=t.math;return i(r(n(4098),t.VaporPressureByt(e)),s(a(e,n(237.3)),n(2)))}},ACTUAL_VAPOR_PRESSURE:{key:"actual_vapor_pressure",name:"实际水汽压",unit:"kPa",fn(t,e,a,r,i){const{add:n,multiply:s,divide:o,bignumber:u}=t.math;return o(n(s(t.VaporPressureByt(e),u(i)),s(t.VaporPressureByt(a),u(r))),u(2))}},EARTH_SUN_DISTANCE_INVERSE:{key:"earth_sun_distance_inverse",name:"日地间相对距离的倒数",unit:"AU^-1",fn(t,e){const{evaluate:a}=t.math;return a(`1 + 0.033 * cos((2 * ${Math.PI} * ${e}) / 365)`)}},SOLAR_MAGNETIC_DECLINATION:{key:"solar_magnetic_declination",name:"太阳磁偏角",unit:"",fn(t,e){const{evaluate:a}=t.math;return a(`0.409 * sin((2 * ${Math.PI} * ${e} / 365) - 1.39)`)}},SUNSET_ANGLE:{key:"sunset_angle",name:"日落时角",unit:"",fn(t,e,a){const{evaluate:r}=t.math;return r(`acos(-tan(${e}) * tan(${a}))`)}},ZENITH_RADIATION:{key:"zenith_radiation",name:"天顶辐射",unit:"MJ/day",fn(t,e,a,r,i,n){const{add:s,multiply:o,divide:u,bignumber:h,cos:m,sin:p}=t.math,l=u(o(h(24),h(60),e,n),h(Math.PI)),d=o(i,p(a),p(r)),A=o(m(a),m(r),p(i));return o(l,s(d,A))}},DAYTIME_DURATION:{key:"daytime_duration",name:"白昼时间",unit:"hours",fn(t,e){const{evaluate:a}=t.math;return a(`23 * ${e} / ${Math.PI}`)}},SOLAR_SHORTWAVE_RADIATION:{key:"solar_shortwave_radiation",name:"太阳辐射或太阳短波辐射",unit:"MJ/day",fn(t,e,a,r,i,n){const{add:s,multiply:o,divide:u,bignumber:h}=t.math;return o(s(h(e),o(h(a),u(h(r),h(i)))),h(n))}},CLEAR_SKY_SOLAR_RADIATION:{key:"clear_sky_solar_radiation",name:"晴空太阳辐射",unit:"MJ/day",fn(t,e,a){const{add:r,multiply:i,bignumber:n,pow:s}=t.math,o=t.as,u=t.bs;return o&&u?i(r(o,u),e):i(e,r(n(.75),i(s(210,-5),n(a))))}},NET_LONGWAVE_RADIATION:{key:"net_longwave_radiation",name:"净长波辐射",unit:"MJ/day",fn(t,e,a,r,i,n,s){const{add:o,subtract:u,multiply:h,divide:m,bignumber:p,pow:l,sqrt:d}=t.math,A=h(p(e),m(o(l(o(a,p(273.16)),p(4)),l(o(r,p(273.16)),p(4))),p(2))),c=u(p(.34),h(p(.14),d(i))),_=u(h(p(1.35),m(n,s)),p(.35));return h(A,c,_)}},NET_SHORTWAVE_RADIATION:{key:"net_shortwave_radiation",name:"净太阳辐射或净短波辐射",unit:"MJ/day",fn(t,e,a){const{subtract:r,multiply:i,bignumber:n}=t.math;return i(r(n(1),n(e)),a)}},NET_RADIATION_FROM_CROP_SURFACES:{key:"net_radiation_from_crop_surfaces",name:"作物表面的净辐射",unit:"MJ/day",fn(t,e,a){const{evaluate:r}=t.math;return r(`${e} - ${a}`)}},SOIL_HEAT_FLUX:{key:"soil_heat_flux",name:"土壤热通量",unit:"MJ/day",fn(t){const{subtract:e,multiply:a,bignumber:r}=t.math,i=t.fao.avgTemPrevMonth,n=t.fao.avgTemCurrMonth,s=t.fao.avgTemNextMonth;let o=1e-8;return n&&i?o=a(r(.14),e(n,i)):s&&i&&(o=a(r(.07),e(s,i))),o}},WIND_SPEED_XM_TO_2M:{key:"wind_speed_xm_to_2m",name:"x米高度风速转为2米风速",unit:"m/s",fn(t,e){const{subtract:a,multiply:r,divide:i,bignumber:n,log:s}=t.math;return i(r(n(e[1]),n(4.87)),n(s(a(r(67.82,e[0]),5.42))))}},REFERENCE_EVAPOTRANSPIRATION:{key:"reference_evapotranspiration",name:"参照腾发量",unit:"mm/day",fn(t,e,a,r,i,n,s,o,u){const{add:h,subtract:m,multiply:p,divide:l,bignumber:d}=t.math,A=p(d(.408),d(e),m(d(a),d(r))),c=p(i,l(d(900),h(n,d(273)))),_=p(d(s),m(o,u)),v=h(e,p(i,h(d(1),p(d(.34),d(s)))));return l(h(A,p(c,_)),v)}}},u=class extends s{constructor(t,e={}){var a,r,i,n;super(e),this.isNorthern=!0,this.mode="day",this.Gsc=.082,this.sigma=4.903e-9,this.as=.25,this.bs=.5,this.alpha=.23,this.atmo=null,this.fao=o,this.sigma=null!==(a=t.as)&&void 0!==a?a:4.903e-9,this.as=null!==(r=t.as)&&void 0!==r?r:.25,this.bs=null!==(i=t.bs)&&void 0!==i?i:.5,this.alpha=null!==(n=t.alpha)&&void 0!==n?n:.23,this.atmo=t}DaySequenceNumber(){var t,e;const a=null!==(e=null===(t=this.atmo)||void 0===t?void 0:t.timestamp)&&void 0!==e?e:Date.now();return super.executeFAOMapping(this.fao.DAY_SEQUENCE_NUMBER)(a)}AverageTemperature(){var t,e;const a=null===(t=this.atmo)||void 0===t?void 0:t.temMax,r=null===(e=this.atmo)||void 0===e?void 0:e.temMin;return super.executeFAOMapping(this.fao.AVERAGE_TEMPERATURE)(a,r)}StationAtmosphericPressure(){var t;const e=null===(t=this.atmo)||void 0===t?void 0:t.height;return super.executeFAOMapping(this.fao.STATION_ATMOSPHERIC_PRESSURE)(e)}VaporPressureByt(t=this.AverageTemperature()){return super.executeFAOMapping(this.fao.VAPOR_PRESSURE_BYT,!1)(t)}RadianMeasureByLat(){var t;const e=null===(t=this.atmo)||void 0===t?void 0:t.latitude;return super.executeFAOMapping(this.fao.RADIAN_MEASURE_BYLAT)(e)}HygrometerConstant(){var t;let e=null===(t=this.atmo)||void 0===t?void 0:t.stationPres;return e||(e=this.StationAtmosphericPressure()),super.executeFAOMapping(this.fao.HYGROMETER_CONSTANT)(e)}SaturationVaporPressure(){var t,e;const a=null===(t=this.atmo)||void 0===t?void 0:t.temMax,r=null===(e=this.atmo)||void 0===e?void 0:e.temMin;return super.executeFAOMapping(this.fao.SATURATION_VAPOR_PRESSURE)(a,r)}SatutationVaporPressureSlope(){const t=this.AverageTemperature();return super.executeFAOMapping(this.fao.SATURATION_VAPOR_PRESSURE_SLOPE)(t)}ActualVaporPressure(){var t,e,a,r;const i=null===(t=this.atmo)||void 0===t?void 0:t.temMax,n=null===(e=this.atmo)||void 0===e?void 0:e.temMin,s=null===(a=this.atmo)||void 0===a?void 0:a.rhMax,o=null===(r=this.atmo)||void 0===r?void 0:r.rhMin;return super.executeFAOMapping(this.fao.ACTUAL_VAPOR_PRESSURE)(i,n,s,o)}EarthSunDistanceInverse(){const t=this.DaySequenceNumber();return super.executeFAOMapping(this.fao.EARTH_SUN_DISTANCE_INVERSE)(t)}SolarMagneticDeclination(){const t=this.DaySequenceNumber();return super.executeFAOMapping(this.fao.SOLAR_MAGNETIC_DECLINATION)(t)}SunsetAngle(){const t=this.RadianMeasureByLat(),e=this.SolarMagneticDeclination();return super.executeFAOMapping(this.fao.SUNSET_ANGLE)(t,e)}ZenithRadiation(){const t=this.Gsc,e=this.RadianMeasureByLat(),a=this.SolarMagneticDeclination(),r=this.SunsetAngle(),i=this.EarthSunDistanceInverse();return super.executeFAOMapping(this.fao.ZENITH_RADIATION)(t,e,a,r,i)}DaytimeDuration(){const t=this.SunsetAngle();return super.executeFAOMapping(this.fao.DAYTIME_DURATION)(t)}SolarShortwaveRadiation(){var t;const e=this.as,a=this.bs,r=this.DaytimeDuration(),i=null===(t=this.atmo)||void 0===t?void 0:t.actualSunTime,n=this.ZenithRadiation();return super.executeFAOMapping(this.fao.SOLAR_SHORTWAVE_RADIATION)(e,a,i,r,n)}ClearSkySolarRadiation(){var t;const e=null===(t=this.atmo)||void 0===t?void 0:t.height,a=this.ZenithRadiation();return super.executeFAOMapping(this.fao.CLEAR_SKY_SOLAR_RADIATION)(a,e)}NetLongWaveRadiation(){var t,e;const a=this.sigma,r=null===(t=this.atmo)||void 0===t?void 0:t.temMax,i=null===(e=this.atmo)||void 0===e?void 0:e.temMin,n=this.ActualVaporPressure(),s=this.SolarShortwaveRadiation(),o=this.ClearSkySolarRadiation();return super.executeFAOMapping(this.fao.NET_LONGWAVE_RADIATION)(a,r,i,n,s,o)}NetShortWaveRadiation(){const t=this.alpha,e=this.SolarShortwaveRadiation();return super.executeFAOMapping(this.fao.NET_SHORTWAVE_RADIATION)(t,e)}NetRadiationFormCropSurfaces(){const t=this.NetShortWaveRadiation(),e=this.NetLongWaveRadiation();return super.executeFAOMapping(this.fao.NET_RADIATION_FROM_CROP_SURFACES)(t,e)}SoilHeatFlux(){return super.executeFAOMapping(this.fao.SOIL_HEAT_FLUX)()}WindSpeedXmTo2m(){var t,e;const a=null===(t=this.atmo)||void 0===t?void 0:t.windSpeedAtxm;return(null===(e=this.atmo)||void 0===e?void 0:e.windSpeedAt2m)||super.executeFAOMapping(this.fao.WIND_SPEED_XM_TO_2M)(a)}ReferenceEvapotranspiration(){const t=this.SatutationVaporPressureSlope(),e=this.NetRadiationFormCropSurfaces(),a=this.SoilHeatFlux(),r=this.HygrometerConstant(),i=this.AverageTemperature(),n=this.WindSpeedXmTo2m(),s=this.SaturationVaporPressure(),o=this.ActualVaporPressure();return super.executeFAOMapping(this.fao.REFERENCE_EVAPOTRANSPIRATION)(t,e,a,r,i,n,s,o)}start(){return this.ReferenceEvapotranspiration()}getCache(){return Array.from(this.cacheData).reduce(((t,[e,a])=>(t[e]=a,t)),{})}};return i})()));